var ArrowTable=function($){"use strict";$=$&&$.hasOwnProperty("default")?$["default"]:$;function ArrowTable(table,options){this.init(table,options)}ArrowTable.prototype={defaults:{namespace:"arrowtable",beforeMove:$.noop,afterMove:$.noop,listenTarget:"input",focusTarget:"input",enabledKeys:["left","right","up","down"],continuousDelay:50},KEYS:{37:"left",39:"right",38:"up",40:"down"},init:function(table,options){this.options=$.extend({},this.defaults,options);this.$table=$(table);this.bindEvents()},findMoveTarget:function(direction,$element){var $target;switch(direction){case"right":$target=$element.closest("td").next();break;case"left":$target=$element.closest("td").prev();break;case"down":$target=$element.closest("tr").next().find("td:eq("+$element.closest("td").index()+")");break;case"up":$target=$element.closest("tr").prev().find("td:eq("+$element.closest("td").index()+")");break}return $target},move:function(element,direction){var $this=$(element);var findMoveTarget=$.proxy(function(){return this.findMoveTarget(direction,$this)},this);var move=this.options.beforeMove($this[0],findMoveTarget,direction);if(move===false){return}var $target=findMoveTarget();if($target.length){this.focusTarget($target);this.options.afterMove($this[0],$target[0],direction)}},focusTarget:function($target){$target.find(this.options.focusTarget).focus()},bindEvents:function(){var moveTimer;var moveEvent=function(event){var direction=this.KEYS[event.which];if($.inArray(direction,this.options.enabledKeys)===-1){return}if(this.options.continuousDelay>0){if(moveTimer){return}moveTimer=setTimeout(function(){moveTimer=null},this.options.continuousDelay)}event.preventDefault();this.move(event.target,direction)};var keyup=function(){moveTimer=null};this.$table.on("keydown."+this.options.namespace,this.options.listenTarget,$.proxy(moveEvent,this)).on("keyup."+this.options.namespace,this.options.listenTarget,keyup)},unbindEvents:function(){this.$table.off("."+this.options.namespace)},destroy:function(){this.unbindEvents();return this}};$.fn.arrowTable=function(options){options=options||{};var namespace=options.namespace||ArrowTable.prototype.defaults.namespace,isMethodCall=typeof options==="string";return $(this).each(function(){var $this=$(this);var arrowTable=$this.data(namespace);if(isMethodCall){if(!arrowTable)return this;switch(options){case"destroy":arrowTable.destroy();$this.removeData(namespace);break}return this}if(arrowTable===undefined){arrowTable=new ArrowTable(this,options);$this.data(namespace,arrowTable)}else{arrowTable.destroy().init(this,options)}return this})};return ArrowTable}(jQuery);